@*allows edit or create*@
@page "/admin/books/edit/{id:long}"  
@page "/admin/books/create"
@inherits OwningComponentBase<IBookstoreRespository>
<style>
    div.validation-message {
        color: rbg(220,53, 69;
        font-weight: 500)
    }
</style>


<h3 class="bg-@ThemeColor text-white text-center p-1"></h3>


@*form to edit existing book or add new book*@
<EditForm Model="b" OnValidSubmit="SaveBook">
    <DataAnnotationsValidator></DataAnnotationsValidator>


        <div class="form-group">
            <label>Book Id:</label>
            <input class="form-control" disabled value="@b.BookId" />
        </div>
        <div class="form-group">
            <label>Title:</label>
            <ValidationMessage For="@(() => b.Title)" />
            <InputText class="form-control" @bind-Value="b.Title" />
        </div>
        <div class="form-group">
            <label>Author:</label>
            <ValidationMessage For="@(() => b.Author)" />
            <InputText class="form-control" @bind-Value="b.Author" />
        </div>
        <div class="form-group">
            <label>Publisher:</label>
            <ValidationMessage For="@(() => b.Publisher)" />
            <InputText class="form-control" @bind-Value="b.Publisher" />
        </div>
        <div class="form-group">
            <label>Classification:</label>
            <ValidationMessage For="@(() => b.Classification)" />
            <InputText class="form-control" @bind-Value="b.Classification" />
        </div>
        <div class="form-group">
            <label>Category:</label>
            <ValidationMessage For="@(() => b.Category)" />
            <InputText class="form-control" @bind-Value="b.Category" />
        </div>
        <div class="form-group">
            <label>Isbn:</label>
            <ValidationMessage For="@(() => b.Isbn)" />
            <InputText class="form-control" @bind-Value="b.Isbn" />
        </div>
        <div class="form-group">
            <label>PageCount:</label>
            <ValidationMessage For="@(() => b.PageCount)" />
            <InputNumber class="form-control" @bind-Value="b.PageCount" />
        </div>
        <div class="form-group">
            <label>Price:</label>
            <ValidationMessage For="@(() => b.Price)" />
            <InputNumber class="form-control" @bind-Value="b.Price" />
        </div>


  

    <button type="submit" class="btn btn-@ThemeColor">Save</button>
    <NavLink class="btn btn-secondary" href="/admin/books">Cancel</NavLink>



</EditForm>


@*add breadcrumbs to show path*@ 
<ul class="breadcrumb">
    <li><a href="/admin"> Admin </a> <span class="divider"> / </span></li>
    <li><a href="/admin/books"> Books </a> <span class="divider"> / </span></li>
    <li class="active"> Editor </li>
</ul>

@code {

    [Parameter]
    public long Id { get; set; } = 0;

    public string ThemeColor => Id == 0 ? "primary" : "warning";

    public string TitleText => Id == 0 ? "Create" : "Edit";

    public Models.Books b { get; set; } = new Models.Books();

    public IBookstoreRespository repo => Service;

    protected override void OnParametersSet()
    {
        if (Id != 0)
        {
            b = repo.Books.FirstOrDefault(x => x.BookId == Id);
                }
    }

    public void SaveBook()
    {
        if (Id == 0)
        {
            repo.CreateBook(b);
        }
        else
        {
            repo.SaveBook(b);
        }

        NavManager.NavigateTo("/admin/books");
    }

    [Inject]
    public NavigationManager NavManager { get; set; }


}
